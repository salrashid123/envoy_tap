node:
    cluster: service_greeter
    id: test-id

admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9000

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 8080 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          http2_protocol_options: {}
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route: 
                  cluster: service_grpc
          http_filters:
          - name: envoy.filters.http.tap
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.tap.v3.Tap
              common_config:
                admin_config:
                  config_id: test_config_id
                # static_config:
                #   match_config:
                #     http_request_headers_match:
                #       headers:
                #       - name: ":path"
                #         exact_match: "/echo.EchoServer/SayHelloUnary"
                #   output_config:
                #     streaming: false
                #     sinks:
                #     - format: JSON_BODY_AS_BYTES
                #       file_per_tap:
                #         path_prefix: /tmp/             
          - name: envoy.filters.http.router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          require_client_certificate: true          
          common_tls_context:
            tls_certificates:
            - certificate_chain:
                filename: certs/grpc_server_crt.pem
              private_key:
                filename: certs/grpc_server_key.pem      

  clusters:
  - name: service_grpc
    type: static
    connect_timeout: 5s
    http2_protocol_options: {}
    load_assignment:
      cluster_name: service_grpc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 50051
    common_lb_config:
      healthy_panic_threshold:
        value: 50.0   
    health_checks:
      - timeout: 1s
        interval: 5s
        interval_jitter: 1s
        no_traffic_interval: 5s
        unhealthy_threshold: 1
        healthy_threshold: 3
        grpc_health_check:
          service_name: "echo.EchoServer"
          authority: "grpc.domain.com"
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:    
          validation_context:
            trusted_ca:
              filename: "certs/CA_crt.pem"